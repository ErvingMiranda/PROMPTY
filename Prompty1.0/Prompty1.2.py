#Parte 1: Preparar los comandos b√°sicos
#Implementar al menos 5 comandos funcionales que el asistente pueda ejecutar correctamente 
#1. Mostrar fecha y hora
#2. Abrir carpetas o aplicaciones
#3. Realizar b√∫squedas en YouTube o el navegador
#4. Proporcionar datos curiosos
#5. Ofrecer informaci√≥n sobre el programa y sus creadores.

from datetime import datetime
import os
from tkinter import Tk, filedialog
import webbrowser
import shutil
import random
import subprocess
import platform
from colorama import init, Fore, Style
from IngresarDatosCuriosos import administrar_datos_curiosos

# Inicializa colorama
init(autoreset=True)

def limpiar_pantalla():
    os.system('cls' if os.name == 'nt' else 'clear')

def abrir_elemento(ruta):
    try:
        if platform.system() == "Windows":
            os.startfile(ruta)
        elif platform.system() == "Darwin":
            subprocess.Popen(["open", ruta])
        else:
            subprocess.Popen(["xdg-open", ruta])
        print(Fore.GREEN + f"‚úî Abriendo: {ruta}")
    except Exception as e:
        print(Fore.RED + f"‚ùå Error al abrir {ruta}: {e}")

def mostrar_fecha_hora():
    ahora = datetime.now()
    print(Fore.CYAN + f"üïí Fecha y hora actual: {ahora.strftime('%d/%m/%Y %H:%M:%S')}")

def abrir_con_ruta():
    ruta = input(Fore.YELLOW + "\nIntroduce la ruta completa del archivo o aplicaci√≥n (por ejemplo, C:/...): ")
    abrir_elemento(ruta)

def abrir_con_explorador():
    root = Tk()
    root.withdraw()
    root.attributes("-topmost", True)

    while True:
        tipo = input(Fore.YELLOW + "\n¬øQu√© deseas abrir? (1. Carpeta, 2. Aplicaci√≥n): ")
        if tipo == '1':
            ruta = filedialog.askdirectory(title="Selecciona una carpeta", parent=root)
            break
        elif tipo == '2':
            ruta = filedialog.askopenfilename(title="Selecciona un archivo o aplicaci√≥n", parent=root)
            break
        else:
            print(Fore.RED + "‚ùå Opci√≥n no v√°lida. Intenta de nuevo.")

    root.destroy()

    if ruta:
        abrir_elemento(ruta)
    else:
        print(Fore.RED + "‚ùå No se seleccion√≥ ning√∫n archivo.")

def buscar_en_navegador():
    print(Fore.YELLOW + "\n¬øD√≥nde quieres hacer la b√∫squeda?")
    print("1. YouTube")
    print("2. Navegador (Google)")
    
    destino = input("Selecciona una opci√≥n (1 o 2): ").strip()
    if destino not in ('1', '2'):
        print(Fore.RED + "‚ùå Opci√≥n inv√°lida. Intenta nuevamente.")
        print(Fore.YELLOW + "\n¬øD√≥nde quieres hacer la b√∫squeda?")
        print("1. YouTube")
        print("2. Navegador (Google)")
        
        destino = input("Selecciona una opci√≥n (1 o 2): ").strip()

    print(Fore.YELLOW + "\n¬øTienes un t√©rmino para buscar o un enlace (URL)?")
    print("1. T√©rmino de b√∫squeda")
    print("2. URL directa")
    
    tipo = input("Selecciona una opci√≥n (1 o 2): ").strip()
    while tipo not in ('1', '2'):
        print(Fore.RED + "‚ùå Opci√≥n inv√°lida. Intenta nuevamente.")
        print(Fore.YELLOW + "\n¬øTienes un t√©rmino para buscar o un enlace (URL)?")
        print("1. T√©rmino de b√∫squeda")
        print("2. URL directa")
        tipo = input("Selecciona una opci√≥n (1 o 2): ").strip()

    url = ""

    if destino == '1':  # YouTube
        if tipo == '1':
            termino = input("\n¬øQu√© deseas buscar en YouTube?: ").strip()
            while not termino:
                print(Fore.RED + "‚ùå El t√©rmino de b√∫squeda no puede estar vac√≠o.")
                termino = input("¬øQu√© deseas buscar en YouTube?: ").strip()
            url = f"https://www.youtube.com/results?search_query={termino.replace(' ', '+')}"
        else:
            url = input("\nIntroduce el enlace de YouTube: ").strip()
    else:  # Google
        if tipo == '1':
            termino = input("\n¬øQu√© deseas buscar en Google?: ").strip()
            while not termino:
                print(Fore.RED + "‚ùå El t√©rmino de b√∫squeda no puede estar vac√≠o.")
                termino = input("¬øQu√© deseas buscar en Google?: ").strip()
            url = f"https://www.google.com/search?q={termino.replace(' ', '+')}"
        else:
            url = input("\nIntroduce el enlace de la p√°gina web: ").strip()

    # Validar URL si es directa
    if tipo == '2':
        if not url.startswith(("http://", "https://")):
            print(Fore.RED + "‚ùå La URL debe comenzar con 'http://' o 'https://'.")
            return

    # Intentar abrir el navegador
    chrome_path = shutil.which("chrome") or shutil.which("google-chrome")
    try:
        if chrome_path:
            webbrowser.get(f'"{chrome_path}" %s').open(url)
        else:
            webbrowser.open(url)
        print(Fore.BLUE + f"‚úî Abriendo: {url}")
    except Exception as e:
        print(Fore.RED + f"‚ùå Error al abrir el navegador: {e}")

def datos_curiosos():
    try:
        with open("datos_curiosos.txt", "r", encoding="utf-8") as archivo:
            datos = archivo.readlines()
        if datos:
            print(Fore.MAGENTA + f"‚ú® Dato curioso: {random.choice(datos).strip()}")
        else:
            print(Fore.YELLOW + "‚ö† No hay datos curiosos disponibles.")
    except FileNotFoundError:
        datos_fallback = [
            "¬øSab√≠as que el coraz√≥n humano late m√°s de 100,000 veces al d√≠a?",
            "Los pulpos tienen tres corazones.",
            "La miel nunca se echa a perder.",
            "La Torre Eiffel puede ser 15 cm m√°s alta durante el verano.",
            "Los tiburones exist√≠an antes que los √°rboles."
        ]
        print(Fore.MAGENTA + f"‚ú® Dato curioso: {random.choice(datos_fallback)}")

def informacion_programa():
    print(Fore.YELLOW + "\nSobre qu√© quieres saber m√°s:")
    print("1. Sobre los creadores")
    print("2. Sobre el programa")
    print("3. Sobre el desarrollo")
    print("4. Licencia de uso")
    opcion = input("Selecciona una opci√≥n (1-4): ")

    if opcion == '1':
        print(Fore.CYAN + """
PROMPTY fue desarrollado por un equipo de estudiantes comprometidos con la innovaci√≥n, como proyecto para la asignatura de \n"Introducci√≥n a la Programaci√≥n" en la Universidad Americana (UAM):
        
Miembros del equipo:
    - Erving Miranda: Coordinador del proyecto y encargado del dise√±o general de funciones
    - Owen Bravo: Encargado de pruebas del sistema.
    - Liang Z√∫√±iga: Encargado de documentaci√≥n y apoyo t√©cnico.
    - Mar√≠a Carrasco: Responsable de dise√±o creativo y contenido informativo.""")
    
    elif opcion == '2':
        print(Fore.CYAN + "ü§ñ SOBRE EL PROGRAMA" + Style.RESET_ALL + """
PROMPTY 1.2 es un asistente virtual de escritorio desarrollado como proyecto final del curso "Introducci√≥n a la Programaci√≥n" en la Universidad Americana (UAM).
        """)

        print(Fore.CYAN + "üéØ Objetivo del programa:" + Style.RESET_ALL + """
Desarrollar un asistente virtual de escritorio en Python que permita ejecutar tareas b√°sicas mediante comandos escritos y por voz, integrando una interfaz gr√°fica amigable y una voz sint√©tica configurable que brinde respuestas auditivas.

El proyecto busca aplicar conocimientos fundamentales del lenguaje Python en un entorno pr√°ctico, interactivo y creativo, 
permitiendo a los usuarios realizar acciones cotidianas como consultar la hora, abrir archivos, buscar en internet o recibir datos curiosos, \ntodo desde una interfaz amigable.

Inspirado por asistentes como Jarvis (Iron Man) o herramientas como ChatGPT, PROMPTY combina l√≥gica de programaci√≥n con una experiencia de usuario accesible y en constante evoluci√≥n.
        """)

        print(Fore.BLUE + "üõ†Ô∏è Funciones principales:" + Style.RESET_ALL + """
        - Mostrar fecha y hora actual.
        - Abrir archivos y aplicaciones mediante rutas o explorador de archivos.
        - Realizar b√∫squedas en YouTube o Google.
        - Proporcionar datos curiosos de forma aleatoria.
        - Informaci√≥n sobre el programa y sus creadores.
        """)

        print(Fore.YELLOW + "üîí Modo administrador:" + Style.RESET_ALL + """
        - Permite agregar o sobrescribir datos curiosos en el archivo de texto.
        - Requiere contrase√±a para acceso.
        """)


    
    elif opcion == '3':
        print(Fore.CYAN + """
üõ†Ô∏è PROCESO DE DESARROLLO

PROMPTY fue desarrollado en el lenguaje **Python 3.13.3**, utilizando librer√≠as est√°ndar como `datetime`, `os`, `webbrowser`, `tkinter.filedialog` y `random`, as√≠ como m√≥dulos personalizados.

üî∏ Versi√≥n actual: **PROMPTY 1.2**
üî∏ Funciones actuales:
- Mostrar fecha y hora
- Abrir carpetas o aplicaciones
- Buscar en YouTube o Google
- Compartir datos curiosos y a√±adirlos (modo administrador)
- Informaci√≥n general del asistente y sus creadores

üß≠ Pr√≥ximas versiones incluir√°n:
- Reconocimiento de voz
- Interfaz gr√°fica completa con `tkinter`
- Respuestas auditivas mediante `pyttsx3`

Este proyecto se ha ido construyendo de a poco, aplicando conceptos como modularidad, condicionales, validaci√≥n de entradas y manejo de archivos.""")
    
    elif opcion == '4':
        print(Fore.CYAN + """
üìú LICENCIA DE USO Y DERECHOS

¬© 2025 PROMPTY 1.2 | Universidad Americana (UAM)

Este software fue desarrollado exclusivamente con fines **educativos y demostrativos**. 
Todos los derechos pertenecen a los autores mencionados y a la Universidad Americana.

üîí LICENCIA:
- Uso libre para prop√≥sitos acad√©micos y personales.
- No se permite su distribuci√≥n comercial sin autorizaci√≥n del equipo creador.
- Se autoriza la modificaci√≥n del c√≥digo siempre que se mantenga el cr√©dito original.

Cualquier uso indebido fuera del marco acad√©mico puede violar derechos de autor o pol√≠ticas institucionales.""")
    
    else:
        print(Fore.RED + "‚ùå Opci√≥n no v√°lida.")

def mostrar_menu():
    print(Fore.YELLOW + "\nComandos disponibles:")
    print(Fore.GREEN + "1." + Style.RESET_ALL + " Mostrar fecha y hora")
    print(Fore.GREEN + "2." + Style.RESET_ALL + " Abrir carpeta o aplicaci√≥n")
    print(Fore.GREEN + "3." + Style.RESET_ALL + " Buscar en YouTube o Google")
    print(Fore.GREEN + "4." + Style.RESET_ALL + " Datos curiosos")
    print(Fore.GREEN + "5." + Style.RESET_ALL + " Sobre nosotros")
    print(Fore.GREEN + "6." + Style.RESET_ALL + " A√±adir dato curioso (admin)")
    print(Fore.GREEN + "7." + Style.RESET_ALL + " Salir (o 'salir' para cerrar el programa)")

# === Programa principal ===
while True:
    limpiar_pantalla()
    print(Fore.CYAN + Style.BRIGHT + "\nBienvenido a PROMPTY 1.2")
    print(Style.RESET_ALL + "Soy un asistente virtual y puedo ayudarte con varias tareas.")
    mostrar_menu()
    comando = input(Fore.YELLOW + "\n¬øQu√© deseas hacer?: ")

    if comando.lower() == 'salir' or comando == '7':
        print(Fore.CYAN + "üëã Saliendo del programa. ¬°Hasta luego!")
        break
    elif comando == '1':
        mostrar_fecha_hora()
    elif comando == '2':
        while True:
            print(Fore.YELLOW + "\n¬øC√≥mo deseas abrir?")
            print("1. Con ruta escrita")
            print("2. Buscando con el explorador")
            opcion = input("Elige una opci√≥n (1 o 2): ")
            if opcion == '1':
                abrir_con_ruta()
                break
            elif opcion == '2':
                abrir_con_explorador()
                break
            else:
                print(Fore.RED + "‚ùå Opci√≥n no v√°lida. Intenta de nuevo.")
    elif comando == '3':
        buscar_en_navegador()
    elif comando == '4':
        datos_curiosos()
    elif comando == '5':
        informacion_programa()
    elif comando == '6':
        clave = input("Introduce la contrase√±a de administrador: ")
        if clave == "admin123":
            limpiar_pantalla()
            print(Fore.GREEN + "üîë Acceso concedido al modo administrador.")
            administrar_datos_curiosos()
        else:
            print(Fore.RED + "‚ùå Contrase√±a incorrecta. Acceso denegado.")
    else:
        print(Fore.RED + "‚ùå Comando no reconocido. Por favor, intenta de nuevo.")
        input(Fore.YELLOW + "Presiona Enter para continuar...")
        continue

    while True:
        continuar = input(Fore.YELLOW + "\n¬øQuieres hacer algo m√°s? (s/n): ").lower()
        if continuar == 's':
            break
        elif continuar == 'n':
            print(Fore.GREEN + "üëã Gracias por probar PROMPTY, ¬°nos vemos luego!")
            exit()
        else:
            print(Fore.RED + "‚ùå Opci√≥n no v√°lida. Responde con 's' para s√≠ o 'n' para no.")